#chapter 3 特殊字符
  ;	命令分隔符，可以用来在一行中来写多个命令
  ;;	终止"case"选项
  .	.命令等价于source命令
  .	.作为文件名的一部分。
  .	.字符匹配，在正则表达式中，用来匹配任何的单个字符。
  "	部分引用。"STRING"阻止了一部分特殊字符	"
  '	全引用。'STRING'阻止了全部特殊字符	'
  ,	逗号链接了一系列的算术操作，虽然里边所有的内容都被运行了，但只有最后一项被返回。
  	比如：
	  let "t2=((a=9, 15/13))"	#Set "a=9" and "t2=15/3"
  \	转移字符
  /	文件名路径分隔符，或用来做除法操作
  `	后置引用，命令替换			`
  :	空命令，等价于"NOP"(no op)，也可以被认为与shell内建命令(true)作用相同。
  	  :是一个bash的内建命令，它的返回值是0，就是shell返回的true
  !	取反操作符，将反转“退出状态”结果
  *	万能匹配字符，用于文件名匹配或正则表达式中
  *	数学乘法
  	**是幂运算
  ?	测试操作。在一个确定的表达式中，用?来测试结果
  	在“参数替换”中，?测试一个变量是否被set了
  ?	在file globbing中和在正则表达式中一样匹配任意的单个字符
  $	变量替换
  $	在正则表达式中作为行结束符
  ${}	参数替换
  $*,$@	位置参数
  $?	退出状态变量.$?保存一个命令/一个函数或脚本本身的退出状态
  $$	进程ID变量.这个$$变量保存运行脚本进程ID
  ()	命令组
  	如：
	  (a=hello;echo $a)
	注意：
	  在()中的命令列表，将作为一个子shell来运行
	  在()中的变量，由于是在子shell中，所以对于脚本剩下的部分是不可用的
	用在数组初始化
	  array=(element1,element2,element3)
  {xxx,yyy,zzz...}
  	大括号扩展
	注意：
	  在大括号中不允许有空白，除非这个空悲是有意义的
  {}	代码块，又被称为内部组。这个结构创建了一个匿名的函数，但是与函数不同是，\
	  在其中声明的变量，对于脚本其他部分的代码来说还是可见的。
  {} \;	路径名.一般都在find命令中使用，这不是一个shell内建命令
	注意：
	  ";"用来结束find命令序列的-exec选项
