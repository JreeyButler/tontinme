------tcp长连接和短连接
------http get/post

#tcp长连接和短连接
	1.短连接
	过程：client向server发起连接请求，server接到请求，然后双方建立连接。client向server发送消息，server回应client，然后一次读写就完成了，这时候
	双方任何一个都可以发起close操作，不过一般都是client先发起close操作。短连接一般只会在client/server间传递一次读写操作
	优点：管理起来比较简单，存在的连接都是有用的连接，不需要额外的控制手段
	2.长连接
	过程：client向server发起连接，server接受client连接，双方建立连接。client与server完成一次读写之后，它们之间的连接并不会主动关闭，后续的读写
	操作会继续使用这个连接
	3.TCP保活功能
	如果一个给定的连接在两小时内没有任何动作，则服务器就向客户发一个探测报文段，客户主机必须处于以下4个状态之一：
		1)客户主机依然正常运行，并从服务器可达。客户的TCP响应正常，而服务器也知道对方是正常的，服务器在两个小时后将保活定时器复位
		2)客户主机已崩溃，并且关闭或者正在重启。在任何一种情况下，客户的TCP都没有响应，它就认为客户主机已经关闭并终止连接
		3)客户主机崩溃并已经重新启动。服务器将收到一个对其探测保活的响应，这个响应是一个复位，使得服务器终止这个连接
		4)客户机正常运行，但是服务器不可达。这种情况与2)类似，TCP能发现的就是没有收到探查的响应
	但是这里存在一个问题，存活功能的探测周期太长，遭遇到恶意的连接时，保活功能就不够使了。
#http get/post	
	http定义了与服务器交互的不同方法，最基本的是get和post
	http-get和http-post是使用http的标准协议动词，用于编码和传送变量名/变量值对参数，并且使用相关的请求语义。每个http-get和http-post都由一系列http
		请求头组成，这些请求头定义了客户端从服务器请求了什么，而响应则是由一系列http应答头和应答数据组成，如果请求成功则返回应答
	http-get使用MIME类型application/x-www/form-urlencoded的urlencoded文本的格式传递参数。urlencoding是一种字符编码（例如空格编码是%20），附加参数
		还能被认为是一个查询字符串
	http-post也是被url编码的，然而，变量名/变量值不作为url的一部分被传送，而是放在实际的http请求消息内部被传送
	在客户端，get方式通过url提交数据，数据在url中可见；post方式，数据放置在html header内提交
	对于get方式，服务器端用request.querystring获取变量的值；对于post方式，服务器端用request.form获取提交的数据
	安全性
		get方式会将参数显示在url中，post方式则不会，但说post比get安全肯定是错的，二者都是明文传输。
		语义上，get是获取指定url上的资源，是读操作，重要的一点是不论对某个资源get多少次，它的状态是不会改变的，在这个意义上，我们说get是安全的
			(不是被密码学或者数据保护意义上的安全);因为get是安全的，所以get返回的内容可以被浏览器、cache服务器缓存起来；
		而post的语义是对指定资源"追加/添加"数据，所以是不安全的，每次提交的post，参与的代码都会被认为这个操作会修改操作对象资源的状态，缓存服务器
			不会缓存post请求
	两个概念：安全的(safe)，幂等的(idempotent)
		安全的是指没有明显的对用户有影响的副作用(包括修改该资源的状态)。http方法里的GET和HEAD都是安全的
		幂等的是指一个方法不论多少次操作，结果都是一样。PUT(把内容放到指定url)，DELETE(删除某个URL代表的资源)，虽然都修改了资源内容，但多次
			操作，结果是相同的，因此和HEAD，GET一样都是幂等的
		所以根据HTTP协议，GET是安全的，也是幂等的，而POST既不是安全的，也不是幂等的	


