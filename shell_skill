#!/bin/sh

#快速备份一个文件
	$cp filename{,.bak}
	这道命令把filename文件拷贝成filename.bak，filename{,.bak}这一段会被bash展开成filename filename.bak再\
		传给cp。
#免密码ssh登录主机
	$ssh-copy-id remote-machine
	这个命令把当前用户的公钥串写入到远程主机的~/.ssh/authorized_keys内。
#切换会上一个目录
	$cd -
	-代表上一个目录的路径
#替换上一条命令中的一个短语
	$^foo^bar^
	在需要重复运行调试一道常常的命令，需要测试某个参数的石油，用这个命令会比较实用
	这道命令的原始样式应该是这样的：
		!!:s/foo/bar
#以HTTP方式共享当前文件夹的文件
	$python -m SimpleHTTPServer
	该命令执行后将在本机8000端口开放HTTP服务，在其他能访问本机的机器的浏览器打开http://ip:8000即打开一个\
		目录列表，点击即可下载。
#以sudo运行上条命令
	$sudo !!
#用你最喜欢的编辑器来敲命令
	command <CTRL-x CTRL-e>
	在已经敲完的命令后按<CTRL-x CTRL-e>，会打开一个你指定的编辑器（比如vim,通过环境变量$EDITOR指定）。\
	这特别适合那些参数异常复杂的程序。保存退出后自动执行这个程序。
	如果你特别喜欢别的编辑器，可以在~/.bashrc里面放上比如export EDITOR=nana的命令
#在以普通用户打开的vim中保存一个root用户文件
	:w !sudo tee %
	:w!{cmd} 让vim执行一个外部命令{cmd}，然后把当前缓冲区的内容从stdin传入
	tee是一个把stdin保存到文件的小工具
	%是vim中一个只读寄存器的名字，总保存着当前编辑文件的文件路径。
	所以执行这个命令，就相当于从vim外部修改了当前编辑的文件。
#抓取linux桌面的视频
	$ffmpeg -f x11grab -s wxga -r 25 -i:0.0 -sameq /tmp/out.mpg
	-f x11 grab 指定输入类型。因为x11的缓冲区不是普通的视频文件可以侦测的格式，必须指定后ffmpeg才知道如何获得输入。
	-s wxga 设置抓取区域的大小。wxga是1366*768的标准说法，也可以换成-s 800*600的写法
	-r 25 设置帧率，即每秒抓取的画面数
	-i:0.0 设置输入源，本地X默认在0.0
	-sameq 保持跟输入流一样的图像质量，以用来后期处理

