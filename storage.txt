------iops
------raid介绍

#iops
	input/output operation per second
	IOPS is a common performance measurement used to benchmark computer storage devices like hard disk drives(HDD)
		solid state drivers(SSD),and storage area networks(SAN). As with any benchmark, IOPS numbers published
		by storage device manufactures do not guarantee real-world application performance
	即每秒进行读写操作(I/O)的次数，多用于数据库等场合，衡量随机访问的性能
	存储端的iops性能和主机端的IO是不同的，IOPS是指存储每秒可接受多少次主机发出的访问，主机的一次IO需要多次访问
		存储才可以完成
	The most common performance characteristic are as follows:
		measurement		Description
		Total IOPS		Total number of I/O operation per second (when performing a mix of read and write tests)
		Random Read IOPS	Average number of random read I/O operations per second
		Random Write IOPS	Average number of random write I/O operations per second
		Random Read IOPS	Average number of sequential read I/O operations per second
		Random Write IOPS	Average number of sequential write I/O operations per second
	For HDDs and similar electromechanical storage devices, the random IOPS numbers are primarily dependent upon the 
		storage device's random seek time(寻道时间) 	'
	For SSDs and similar state storage devices, the random IOPS numbers are primarily dependent upon the storage device's   '
		internal controller and memory interface speeds.
	On both types of storage devices the sequential IOPS numbers(especial when using a large block size) typically indicate 
		the maximum sustained bandwidth that the storage device can handle
	Often sequential IOPS are reported as a simple MB/s number as follows:
		IOPS*TransferSizeInBytes = BytesPerSec(with the answer typically converted to MegabytesPerSec)
	EXAMPLE:
		Device			Type	IOPS		Interface
		7,200 rpm SATA drives	HDD	~75-100 IOPS	SATA 3 Gb/s
		10,000 rpm SATA drives	HDD	~125-150 IOPS	SATA 3 Gb/s
		15,000 rpm SAS drives	HDD	~175-210 IOPS	SAS

		#Solid State Devices
		http://en.wikipedia.org/wiki/IOPS
#raid介绍
	RAID(Redundant Array of Independent Disks), one of the most common techniques to improve either data reliability
		or data performance (or both).
	The core RAID configurations are listed as:RAID-0,RAID-1,RAID-2,RAID-3,RAID-4,RAID-5, and RAID-6
	
	RAID-0
	1.This RAID configuration is really focused on performance since the blocks are basically striped across multiple disks.
	2.How the data is written to two disks
		the first block of data A0, is written to the first disk,the second block of data A1, is written to the second disk,
			the third block of data A3, is written to the firsh disk, and so on.
		If the I/O is happening fash enough data blocks can be written almost simultaneously(A0 and A1 are written at just 
			about the same time)
	3.Reading from a RAID-0 group is almostso very fast. A read request comes in and the RAID controller, which controls the placement
		of data, knows that it can read A0 and A1 at the same time since they are on separate disks, basically doubling the 
		potential read performance relative to a single disk.
	4.You can have as many disks as you want in a RAID-0 array (a group of disks in a RAID-0 configuration). However, if you lose 
		a disk in a RAID-0 array, you will lose access to all of the data in the array. If you can bring the lost disk back
		into the array without losing any data on it. then you can recover the RAID-0 array, but this is a fairly rare occurrence.
	5.RAID-0 is focused solely on performance with no additional data redundancy beyond the redundancy in a single disk.This affects 
		how RAID-0 is used. For example, it can be used in situations where performance is paramount and you have a copy of 
		your data elsewhere or the data is not import.
	6.The capacity is computed as:
		Capacity = n * min(disk sizes)
		#n is the number of disks in the Array
		#min(disk sizes) is the minimum common capacity across the drivers (this indicates that you can use drives of different 
			size)
	7.The failure rate is a little more involved but can also be estimated
		MTTFgroup = MTTFdisk / n
		#n is number of disks in the array
		#MTTF is the Mean Time To Failure(平均故障时间) and "group" refers to the RAID-0 array and "Disk" refers to a single disk.
	8.RAID-0 is the fastest RAID configuration and the best capacity utilization of any RAID configuration discussed in this article
	 Table about RAID-0
	 Raid Level	Pros					Cons		Storage Efficiency			Minimum Number of disks
	 RAID-0		*Performance(great read and write 	*No data 	100% assuming the drives are 		2
	 		performance)				redundancy	the same size	
			*great capacity(the best of any		*Poor MTTF
			standard RAID cofigurations)
	RAID-1
	1.How the data is written to RAID-1
		when block A1 is written to disk 0, the same block is also written to disk 1. Since the disks are independent of one another
			the write to disk 0 and the write to disk 1 can happen at the same time.
	2.when the data is read, the RAID controller can read block A1 from disk 0 and block A2 from disk 1 at the same time since the disk
		are independent. So overall, the write performance of a RAID-1 array s the same as a single disk and the read performance 
		acturally faster from a RAID-1 array relative to a single disk
	3.The capacity of RAID-1 is the following:
		capacity = min(disk sizes)
		#meaning that the capacity of RAID-1 is limited by the smallest disk(you can use different size drives in RAID-1). 
		RAID-1 has the lowest capacity utilization of any RAID configuration
	4.The reliability or probability of failure of RAID-1 is the following:
		P(dual failure) = P(single drive) * P(single drive)	#square of the failure of a single drive
		#Since the probability of failure of a single drive is Levelss than 1, that means that the failure of a RAID-1 array is even
			#smaller than the probability of failure of a single drive

	RAID-2
	1.This RAID level was one of the original five defined, but it is no longer really used.
	2.The basic concept is that RAID-2 stripes data at the bit level instead of the block level and uses a Hamming coding for parity computations
	3.In RAID-2, the first bit is written on the first drive, the second bit is written on the second drive, and so on. Then a Hamming-code
		parity is computed and either stored on the disks or on a separate disk.	
	4.Since hard drives added error correction that used Hamming-code, so using them at the RAID level became redundant so people stopped
		using RAID-2

	RAID-3
	1.RAID-3 uses data striping at the byte level and also adds parity computations and sotres them on a delicated parity disk
	2.The RAID-3 layout uses 4 disks and stripes data across three of them and uses the fourth disk for storing parity information
		so a chunk of data "A" has byte A1 written to disk 0, byte A2 is written to disk 1, and bytes A3 written to disk 2.
		then the parity of bytes A1 A2 and A3 is computed and written to disk 3. The process then repeats until the entire chunk 
		of data "A" is written.
	3.The minimum number of disks you can have in RAID-3 is three (you need 2 data disks and a third disk to store the parity)
	4.In particular, RAID-3 cannot accommodate multiple requests at the same time. This result from the fact that a block of data will be
		spread across all members of the RAID-3 group (minux the parity disk) and the data has to reside in the same location on each drive
	5.RAID-3 is not very popular in the real-world but from time to time you do see it used. RAID-3 is used in situations where 
		RAID-0 is totally unacceptale because there is not enough data redundancy and the data throughout reduction due to the data 
		parity computations is acceptable

	RAID-4
	1.RAID-4 builds on RAID-0 by adding a parity disk to block-level striping. Since the striping is now down to a block level each disk
		can be accessed independently to read or write data allowing multiple data access to happen at the same time.
	2.In this layout,data is written in block stripes to the first three disks (disk0, disk1, disk2), while disk 3 it the parity drive.
		the parity of the blocks accross the drives is computed by the RAID controller and stored on the delicated parity drive
	3.The delicated parity drive becomes a performance bottleneck in RAID-4,particular for write I/O. you can write to blocks A1 and B1 
		at the same time since they are on different disks. However the parity for both blocks has to be written to the same drive 
	       	which can only accommodate a single write I/O request at a tim.
	4.The capacity of RAID-4 is the following:
		Capacity = min(disk sizes) * (n-1)
	5.RAID-4 is rarely used because RAID-5 has replaced it 

	RAID-5
	1.RAID-5 is similar to RAID-4 but now the parity is distributed across all of the drives instead of using a dedicated parity drive
		this greatly improves write performance relative to RAID-4 
	2.In this layout, the parity blocks are labeled with a subscript "p" to indicate parity. the blocks that line up(one block per drive)
		are typically a "stripe". The data stripe size is simply the following:
		Data stripe size = block size * (n-1) #n is the number of dirves in the RAID-5 array
	3.Anytime a block inside the stripe is changed or written to, the parity block is recomputed and rewritten (this is sometimes called 
		the read-modify-write process). 
	4.RAID-5 has some write performance for small writes that are smaller than a single stripe since the parity needs to be computed several
		times which eats up computational capability of the RAID controller.
	5.The capacity of RAID-5 is very similar to RAID-4 and is the following:
		Capacity = min(disk sizes) * (n-1)
	6.RAID-5 you can lose a single drive and not lose data
	7.There is a new phenomenon that impacts RAID-5 that has been explained in various article around the web. Basically the capacity 
		of drives is growing quicker than the Unrecoverable Read Error(URE) rate of drives to the point where losing a drive in a 
		RAID-5 array and recovering it to a hot-spare drive is almost guaranteed to lead to a URE which means that the RAID-5 array
		will be lost
	8.There is no shortage of article about RAID-5 on the web. You will see some strong opinions both for and against RAID-5 based on
		usage cases.

	RAID-6
	1.As mentioned previously, there is a potential problem with RAID-5 for larger capacity drives and a larger number of them. 
		RAID-6 attempts to help that situation by using two parity blocks per stripe instead of RAID-5's single parity block.		'
		This allows you to lose two drives with losing any data

	2.The first parity block is noted with as sbuscript "p" such as Ap, the second parity block in a stripe is noted with a subscript 
		"q" such as Aq. The use of two parity blocks reduces the useable capacity of a RAID-6 as in the following:
		Capacity = min(disk sizes) * (n-2)
	3.Computing the first parity block,p, is done in the same fashion as RAID-5. However, computing the q parity block is more complicated
		as explained here(http://en.wikipedia.org/wiki/Standard_RAID_levels#Computing_Parity). This means that the write performance
		of a RAID-6 array can be slower than a RAID-5 array for a given level of RAID controller performance
	4.However, read performance from a RAID-6 is just as fast as a RAID-5 array since reading the parity blocks is skipped.

	Hybrid RAID Levels(Nested RAID Levels)
	1.For example, a common configuration is called RAID 1+0 or RAID-10. The first number ( the furthest to the left) refers to the 
		"bottom" or initial part of the RAID array. Then the second number from the left refers to the "top" level or the RAID array.
		the top level RAID uses the bottom level RAID configurations as building blocks.
	2.In the case of RAID-10, the approach is to use multiple pairs of drives at the lowest level (RAID-1) and then to combin them 
		using RAID-0. 


























	 Raid Level	Pros					Cons				Storage Efficiency		Minimum Number of disks
	 RAID-0		*Performance(great read and write 	*No data 			100% assuming the drives are 	2
	 		performance)				redundancy			the same size	
			*great capacity(the best of any		*Poor MTTF
			standard RAID cofigurations)
	 --------------------------------------------------------------------------------------------------------------------------------------
	 RAID-1		*Great data				*Worst capacity ulilization	50%assuming two drives of the 	2
	 		redundancy/availability			of single RAID levels		same size
			*Great MTTF				*Good read performance,
								limited write performance
	 --------------------------------------------------------------------------------------------------------------------------------------
	 RAID-4		*Good data redundancy/avalilability	*Single parity dsik(causes 	(n-1)/n where n is the number 	3(have to be 
	 		*Good read performance since all of 	bottleneck)			of drives			identical)
			the drive are read at the same time	*Write performance is not 
			*Can lose one drive without losing	that good because of the 
			data					bottleneck of the parity drive
	 --------------------------------------------------------------------------------------------------------------------------------------
	 RAID-5		*Good data redundancy/avalilability	*Write performance is adequate	(n-1)/n where n is the number	3(have to be
	 		*Very good read performance since all	*Write performance for small	of drives			identical)
			of the drives can be read at the same	I/O is not good at all
			time
			*Write performance is adequate(better
			than RAID-4)
			*Can lose one drive without losing 
			data
	 --------------------------------------------------------------------------------------------------------------------------------------
	 RAID-6		*Excellent data redundancy/avalila-	*Write performance is not that	(n-2)/n where n is the number	4(have to be
	 		-bility					good - worse than RAID-5	of drives			identical)
	 		*Very good read performance since 	*Write performance for small
			all of drives can be read at the 	I/O is not good at all
			same time				*more computational horsepower
			*Can lose twoo drives without losing	is required for parity computations
			data
	 --------------------------------------------------------------------------------------------------------------------------------------








