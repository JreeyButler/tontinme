------ext4 ext3特点和区别
------xfs介绍

#ext4 ext3特点和区别
	1。与ext3兼容
		执行若干条命令，就能从ext3在线迁移到ext4，而无须重新格式化磁盘或者重新安装系统。原有ext3\
			数据结构照样保留，ext4作用于新数据。整个系统因此也就获得了ext4所支持的更大容量。
	2. 更大的文件系统和更大的文件
		ext3	最大16TB文件系统，最大2TB文件
		ext4	最大1EB（1024PB）的文件系统，最大16TB文件
	3. 无限数量的子目录
		ext3	目前只支持32,000个子目录
		ext4	支持无限数量的子目录
	4. Extents
		ext3采用间接块映射，当操作大文件时，效率极其低下。比如一个100MB大小的文件，在ext3中要建\
		立25,600个数据块（每个数据块大小为4KB）的映射表。而ext4引入了extents概念，每个extent为一\
			组连续的数据块，上述文件则表示为“该文件数据保存在接下来的25,600个数据块中”，提高了不少\
		效率。	
	5. 多块分配
		当写入数据到ext3文件系统中时，ext3的数据块分配只能分配一个4KB的块，写一个100MB文件就要\
		调用25,600次数据块分配器，而ext4的多块分配器“multiblock allocator”（mballoc）支持一次调\
			用分配多个数据块。
	6. 延迟分配
		ext3的数据块分配策略是尽快分配，而ext4和其他现代文件操作系统的策略是尽可能的延迟分配，\
		直到文件在cache中写完才开始分配数据块并写入磁盘，这样就能优化整个文件的数据块分配。
	7. 快速fsck
		以前执行fsck第一步都会很慢，因为它要检查所有的inode，现在ext4给每个组的inode表都添加了\
		一份未使用的inode的列表，今后fsck ext4文件系统就可以跳过它们而只去检查那些在用的inode了。
	8. 日志校验
		日志是最常用的部分，也极易导致磁盘硬件故障，而从损坏的日志中恢复数据会导致更多的数据损坏\
		ext4的日志校验功能可以很方便的判断日志是否损坏，而且它将ext3的两阶段日志机制合并成一个\
		阶段，在增加安全性的同时提高性能。
	9. “无日志”（no journaling）模式
		日志总归有一些开销，ext4允许关闭日志，以便某些有特殊需求的用户可以借此提高性能
	10. 在线碎片整理
		尽管延迟分配、多块分配和extents能有效减少文件系统碎片，但碎片还是不可避免会产生。ext4支\
		持在线碎片整理，并将提供e4defrag工具进行个别文件或整个文件系统的碎片整理
	11. inode相关特性		
		ext4支持更大的inode，较之ext3默认的inode大小128字节，ext4为了在inode中容纳更多的扩展属性\
		（如纳秒时间戳或inode版本），默认inode大小为256字节。ext4还支持快速扩展属性（fast \
		extended attrbutes）和inode保留（inode reservation）
	12. 持久预分配（persistent preallocation）
		p2p软件为了保证下载文件有足够的空间存放，常常会预先创建一个与所下载文件大小相同的空文件\
		，以免未来的数小时或数天之内磁盘空间不足导致下载失败。ext4在文件系统层面实现了持久预分配\
		并提供相应的API（libc中的posix_fallocate），比应用软件自己实现更有效率。
	13. 默认启用barrier
		磁盘上配有内部缓存，以便重新调整批量数据的写操作顺序，优化写入性能，因此文件系统必须在\
		日志数据写入磁盘后才能commit记录，若commit记录写入在先，而日志有可能损坏，那么就会影响\
		数据完整性。ext4默认启用barrier，只有当barrier之前的数据全部写入磁盘，才能写barrier之后\
		的数据。（可通过“mount -o barrier=0”命令禁用该特性）
	#ext4文件系统测试
		iozone（http://www.iozone.org/）	#测试命令
			time /opt/iozone/bin/iozone -a -s 4G -q 256 -y 4 >|/root/ext4-iozone-stdout.txt
#xfs介绍
  容量
	XFS是一个64位文件系统，最大支持8EB减1字节的单个文件系统，实际部署时取决于宿主操作系统的最大块限制。
	  对于一个32位的Linux系统，文件和文件系统的大小会被限制在16TB。
  文件系统日志
	日志文件系统是一种即使在断点或者是操作系统崩溃的情况下保证文件系统一致性的途径。XFS对文件系统元数据提
	  供了日志支持。
	XFS日志大小的上限是64k个块和128MB中的较大值。
	为了保证性能，XFS的日志更新是异步进行的。
  分配组
	它们是文件系统中的等长线性存储区。这一机制为XFS提供了可伸缩性和并行特性。
  可变块尺寸
	XFS允许在创建文件系统时指定块的大小，从512字节到64KB，以适应专门的用途。
  在线碎片整理
	XFS提供了一个文件系统碎片整理工具，xfs_fsr可以对一个以被挂载、正在使用中的XFS文件系统进行碎片整理。
  在线尺寸调整
	XFS提供了xfs_growfs工具，可以在线调整XFS文件系统的大小。XFS可以向保存当前文件系统的设备上的未分配空间
	  延伸。
  原生备份/恢复工具
	XFS提供了xfsdump和xfsrestore工具协助备份XFS文件系统中的数据。
  写入屏障
	XFS默认在挂载时启用“写入屏障“的支持。这个特性的初衷是要保证文件系统的一致性，具体实现却因设备而易——不是
	  所有的下级硬件都支持缓冲冲刷请求。在带有电池供电缓存的硬件RAID控制器提供的逻辑设备上部署XFS时，这项
	  特性可能导致明显的性能退化。为了防止这种问题，对于能够在断电或发生其他主机故障时保护缓存中数据的设备，
	  应该以nobarrier选项挂载XFS文件系统。
  日志的位置
	XFS文件系统创建时默认使用内置日志，把日志和文件系统数据放置在同一个块设备上。这可能导致磁盘竞争。
	如果确实需要最佳的文件系统性能，XFS提供了一个选项，允许把日志放置在一个分离的物理设备上。
  #XFS缺点
  	XFS文件系统无法被压缩
  	历史上XFS上的元数据操作曾比其他文件系统都慢，表现为在删除大量小文件时性能糟糕。后来开发者使用了一个叫“延迟记录“
    	  的挂载选项。linux内核在2.6.37中使它成为了一个稳定的特性，并计划在2.6.39中把它作为默认的日志记录方法。
