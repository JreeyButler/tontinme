
#ext4 ext3特点和区别
	1。与ext3兼容
		执行若干条命令，就能从ext3在线迁移到ext4，而无须重新格式化磁盘或者重新安装系统。原有ext3\		 数据结构照样保留，ext4作用于新数据。整个系统因此也就获得了ext4所支持的更大容量。
	2. 更大的文件系统和更大的文件
		ext3	最大16TB文件系统，最大2TB文件
		ext4	最大1EB（1024PB）的文件系统，最大16TB文件
	3. 无限数量的子目录
		ext3	目前只支持32,000个子目录
		ext4	支持无限数量的子目录
	4. Extents
		ext3采用间接块映射，当操作大文件时，效率极其低下。比如一个100MB大小的文件，在ext3中要建\
		立25,600个数据块（每个数据块大小为4KB）的映射表。而ext4引入了extents概念，每个extent为一\		 组连续的数据块，上述文件则表示为“该文件数据保存在接下来的25,600个数据块中”，提高了不少\
		效率。	
	5. 多块分配
		当写入数据到ext3文件系统中时，ext3的数据块分配只能分配一个4KB的块，写一个100MB文件就要\
		调用25,600次数据块分配器，而ext4的多块分配器“multiblock allocator”（mballoc）支持一次调\		 用分配多个数据块。
	6. 延迟分配
		ext3的数据块分配策略是尽快分配，而ext4和其他现代文件操作系统的策略是尽可能的延迟分配，\
		直到文件在cache中写完才开始分配数据块并写入磁盘，这样就能优化整个文件的数据块分配。
	7. 快速fsck
		以前执行fsck第一步都会很慢，因为它要检查所有的inode，现在ext4给每个组的inode表都添加了\
		一份未使用的inode的列表，今后fsck ext4文件系统就可以跳过它们而只去检查那些在用的inode了。	 8. 日志校验
		日志是最常用的部分，也极易导致磁盘硬件故障，而从损坏的日志中恢复数据会导致更多的数据损坏\
		ext4的日志校验功能可以很方便的判断日志是否损坏，而且它将ext3的两阶段日志机制合并成一个\
		阶段，在增加安全性的同时提高性能。
	9. “无日志”（no journaling）模式
		日志总归有一些开销，ext4允许关闭日志，以便某些有特殊需求的用户可以借此提高性能
	10. 在线碎片整理
		尽管延迟分配、多块分配和extents能有效减少文件系统碎片，但碎片还是不可避免会产生。ext4支\
		持在线碎片整理，并将提供e4defrag工具进行个别文件或整个文件系统的碎片整理
	11. inode相关特性		
		ext4支持更大的inode，较之ext3默认的inode大小128字节，ext4为了在inode中容纳更多的扩展属性\
		（如纳秒时间戳或inode版本），默认inode大小为256字节。ext4还支持快速扩展属性（fast \
		extended attrbutes）和inode保留（inode reservation）
	12. 持久预分配（persistent preallocation）
		p2p软件为了保证下载文件有足够的空间存放，常常会预先创建一个与所下载文件大小相同的空文件\
		，以免未来的数小时或数天之内磁盘空间不足导致下载失败。ext4在文件系统层面实现了持久预分配\
		并提供相应的API（libc中的posix_fallocate），比应用软件自己实现更有效率。
	13. 默认启用barrier
		磁盘上配有内部缓存，以便重新调整批量数据的写操作顺序，优化写入性能，因此文件系统必须在\
		日志数据写入磁盘后才能commit记录，若commit记录写入在先，而日志有可能损坏，那么就会影响\
		数据完整性。ext4默认启用barrier，只有当barrier之前的数据全部写入磁盘，才能写barrier之后\
		的数据。（可通过“mount -o barrier=0”命令禁用该特性）
	#ext4文件系统测试
		iozone（http://www.iozone.org/）	#测试命令
			time /opt/iozone/bin/iozone -a -s 4G -q 256 -y 4 >|/root/ext4-iozone-stdout.txt
